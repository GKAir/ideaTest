<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--引入db.properties-->
    <context:property-placeholder location="classpath:config/db.properties"/>
    <!--数据库连接-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--整SqlSessionfactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--加载mybatis的配置文件-->
        <!--不加载也行，反正目前里面也是空的，代理的mapper对象在本文件中已经配置-->
       <!-- <property name="configLocation" value="classpath:config/mybatis/SqlMapConfig.xml"/>-->
        <!--别名包配置-->
        <property name="typeAliasesPackage" value="cn.crm.pojo"/>
        <!--数据库链接-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--批量产生代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.crm.mapper,cn.crm.mapper.ext"/>
    </bean>
</beans>